// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Messages.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace CashShuffle.Messages {

  /// <summary>Holder for reflection information generated from Messages.proto</summary>
  public static partial class MessagesReflection {

    #region Descriptor
    /// <summary>File descriptor for Messages.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MessagesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5NZXNzYWdlcy5wcm90bxIUQ2FzaFNodWZmbGUuTWVzc2FnZXMiagoGU2ln",
            "bmVkEiwKBnBhY2tldBgBIAEoCzIcLkNhc2hTaHVmZmxlLk1lc3NhZ2VzLlBh",
            "Y2tldBIyCglzaWduYXR1cmUYAiABKAsyHy5DYXNoU2h1ZmZsZS5NZXNzYWdl",
            "cy5TaWduYXR1cmUirwIKBlBhY2tldBIPCgdzZXNzaW9uGAEgASgMEg4KBm51",
            "bWJlchgCIAEoDRI3Cghmcm9tX2tleRgDIAEoCzIlLkNhc2hTaHVmZmxlLk1l",
            "c3NhZ2VzLlZlcmlmaWNhdGlvbktleRI1CgZ0b19rZXkYBCABKAsyJS5DYXNo",
            "U2h1ZmZsZS5NZXNzYWdlcy5WZXJpZmljYXRpb25LZXkSKgoFcGhhc2UYBSAB",
            "KA4yGy5DYXNoU2h1ZmZsZS5NZXNzYWdlcy5QaGFzZRIuCgdtZXNzYWdlGAYg",
            "ASgLMh0uQ2FzaFNodWZmbGUuTWVzc2FnZXMuTWVzc2FnZRI4CgxyZWdpc3Ry",
            "YXRpb24YByABKAsyIi5DYXNoU2h1ZmZsZS5NZXNzYWdlcy5SZWdpc3RyYXRp",
            "b24irwIKB01lc3NhZ2USLgoHYWRkcmVzcxgBIAEoCzIdLkNhc2hTaHVmZmxl",
            "Lk1lc3NhZ2VzLkFkZHJlc3MSMAoDa2V5GAIgASgLMiMuQ2FzaFNodWZmbGUu",
            "TWVzc2FnZXMuRW5jcnlwdGlvbktleRIoCgRoYXNoGAMgASgLMhouQ2FzaFNo",
            "dWZmbGUuTWVzc2FnZXMuSGFzaBIyCglzaWduYXR1cmUYBCABKAsyHy5DYXNo",
            "U2h1ZmZsZS5NZXNzYWdlcy5TaWduYXR1cmUSCwoDc3RyGAUgASgJEioKBWJs",
            "YW1lGAYgASgLMhsuQ2FzaFNodWZmbGUuTWVzc2FnZXMuQmxhbWUSKwoEbmV4",
            "dBgHIAEoCzIdLkNhc2hTaHVmZmxlLk1lc3NhZ2VzLk1lc3NhZ2UiGgoHQWRk",
            "cmVzcxIPCgdhZGRyZXNzGAEgASgJIh4KDFJlZ2lzdHJhdGlvbhIOCgZhbW91",
            "bnQYASABKAQiHgoPVmVyaWZpY2F0aW9uS2V5EgsKA2tleRgBIAEoCSIcCg1F",
            "bmNyeXB0aW9uS2V5EgsKA2tleRgBIAEoCSIsCg1EZWNyeXB0aW9uS2V5EgsK",
            "A2tleRgBIAEoCRIOCgZwdWJsaWMYAiABKAkiFAoESGFzaBIMCgRoYXNoGAEg",
            "ASgMIh4KCVNpZ25hdHVyZRIRCglzaWduYXR1cmUYASABKAwiIgoLVHJhbnNh",
            "Y3Rpb24SEwoLdHJhbnNhY3Rpb24YASABKAwitwIKBUJsYW1lEiwKBnJlYXNv",
            "bhgBIAEoDjIcLkNhc2hTaHVmZmxlLk1lc3NhZ2VzLlJlYXNvbhI2CgdhY2N1",
            "c2VkGAIgASgLMiUuQ2FzaFNodWZmbGUuTWVzc2FnZXMuVmVyaWZpY2F0aW9u",
            "S2V5EjAKA2tleRgDIAEoCzIjLkNhc2hTaHVmZmxlLk1lc3NhZ2VzLkRlY3J5",
            "cHRpb25LZXkSNgoLdHJhbnNhY3Rpb24YBCABKAsyIS5DYXNoU2h1ZmZsZS5N",
            "ZXNzYWdlcy5UcmFuc2FjdGlvbhIuCgdpbnZhbGlkGAUgASgLMh0uQ2FzaFNo",
            "dWZmbGUuTWVzc2FnZXMuSW52YWxpZBIuCgdwYWNrZXRzGAYgASgLMh0uQ2Fz",
            "aFNodWZmbGUuTWVzc2FnZXMuUGFja2V0cyIaCgdJbnZhbGlkEg8KB2ludmFs",
            "aWQYASABKAwiNwoHUGFja2V0cxIsCgZwYWNrZXQYASADKAsyHC5DYXNoU2h1",
            "ZmZsZS5NZXNzYWdlcy5TaWduZWQqkAEKBVBoYXNlEggKBE5PTkUQABIQCgxB",
            "Tk5PVU5DRU1FTlQQARILCgdTSFVGRkxFEAISDQoJQlJPQURDQVNUEAMSFgoS",
            "RVFVSVZPQ0FUSU9OX0NIRUNLEAQSCwoHU0lHTklORxAFEh8KG1ZFUklGSUNB",
            "VElPTl9BTkRfU1VCTUlTU0lPThAGEgkKBUJMQU1FEAcqxgEKBlJlYXNvbhIV",
            "ChFJTlNVRkZJQ0lFTlRGVU5EUxAAEg8KC0RPVUJMRVNQRU5EEAESFwoTRVFV",
            "SVZPQ0FUSU9ORkFJTFVSRRACEhIKDlNIVUZGTEVGQUlMVVJFEAMSIQodU0hV",
            "RkZMRUFOREVRVUlWT0NBVElPTkZBSUxVUkUQBBIUChBJTlZBTElEU0lHTkFU",
            "VVJFEAUSEQoNTUlTU0lOR09VVFBVVBAGEggKBExJQVIQBxIRCg1JTlZBTElE",
            "Rk9STUFUEAhiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::CashShuffle.Messages.Phase), typeof(global::CashShuffle.Messages.Reason), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::CashShuffle.Messages.Signed), global::CashShuffle.Messages.Signed.Parser, new[]{ "Packet", "Signature" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CashShuffle.Messages.Packet), global::CashShuffle.Messages.Packet.Parser, new[]{ "Session", "Number", "FromKey", "ToKey", "Phase", "Message", "Registration" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CashShuffle.Messages.Message), global::CashShuffle.Messages.Message.Parser, new[]{ "Address", "Key", "Hash", "Signature", "Str", "Blame", "Next" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CashShuffle.Messages.Address), global::CashShuffle.Messages.Address.Parser, new[]{ "Address_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CashShuffle.Messages.Registration), global::CashShuffle.Messages.Registration.Parser, new[]{ "Amount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CashShuffle.Messages.VerificationKey), global::CashShuffle.Messages.VerificationKey.Parser, new[]{ "Key" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CashShuffle.Messages.EncryptionKey), global::CashShuffle.Messages.EncryptionKey.Parser, new[]{ "Key" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CashShuffle.Messages.DecryptionKey), global::CashShuffle.Messages.DecryptionKey.Parser, new[]{ "Key", "Public" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CashShuffle.Messages.Hash), global::CashShuffle.Messages.Hash.Parser, new[]{ "Hash_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CashShuffle.Messages.Signature), global::CashShuffle.Messages.Signature.Parser, new[]{ "Signature_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CashShuffle.Messages.Transaction), global::CashShuffle.Messages.Transaction.Parser, new[]{ "Transaction_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CashShuffle.Messages.Blame), global::CashShuffle.Messages.Blame.Parser, new[]{ "Reason", "Accused", "Key", "Transaction", "Invalid", "Packets" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CashShuffle.Messages.Invalid), global::CashShuffle.Messages.Invalid.Parser, new[]{ "Invalid_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CashShuffle.Messages.Packets), global::CashShuffle.Messages.Packets.Parser, new[]{ "Packet" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum Phase {
    [pbr::OriginalName("NONE")] None = 0,
    [pbr::OriginalName("ANNOUNCEMENT")] Announcement = 1,
    [pbr::OriginalName("SHUFFLE")] Shuffle = 2,
    [pbr::OriginalName("BROADCAST")] Broadcast = 3,
    [pbr::OriginalName("EQUIVOCATION_CHECK")] EquivocationCheck = 4,
    [pbr::OriginalName("SIGNING")] Signing = 5,
    [pbr::OriginalName("VERIFICATION_AND_SUBMISSION")] VerificationAndSubmission = 6,
    [pbr::OriginalName("BLAME")] Blame = 7,
  }

  public enum Reason {
    [pbr::OriginalName("INSUFFICIENTFUNDS")] Insufficientfunds = 0,
    [pbr::OriginalName("DOUBLESPEND")] Doublespend = 1,
    [pbr::OriginalName("EQUIVOCATIONFAILURE")] Equivocationfailure = 2,
    [pbr::OriginalName("SHUFFLEFAILURE")] Shufflefailure = 3,
    [pbr::OriginalName("SHUFFLEANDEQUIVOCATIONFAILURE")] Shuffleandequivocationfailure = 4,
    [pbr::OriginalName("INVALIDSIGNATURE")] Invalidsignature = 5,
    [pbr::OriginalName("MISSINGOUTPUT")] Missingoutput = 6,
    [pbr::OriginalName("LIAR")] Liar = 7,
    [pbr::OriginalName("INVALIDFORMAT")] Invalidformat = 8,
  }

  #endregion

  #region Messages
  public sealed partial class Signed : pb::IMessage<Signed> {
    private static readonly pb::MessageParser<Signed> _parser = new pb::MessageParser<Signed>(() => new Signed());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Signed> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CashShuffle.Messages.MessagesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Signed() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Signed(Signed other) : this() {
      Packet = other.packet_ != null ? other.Packet.Clone() : null;
      Signature = other.signature_ != null ? other.Signature.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Signed Clone() {
      return new Signed(this);
    }

    /// <summary>Field number for the "packet" field.</summary>
    public const int PacketFieldNumber = 1;
    private global::CashShuffle.Messages.Packet packet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CashShuffle.Messages.Packet Packet {
      get { return packet_; }
      set {
        packet_ = value;
      }
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 2;
    private global::CashShuffle.Messages.Signature signature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CashShuffle.Messages.Signature Signature {
      get { return signature_; }
      set {
        signature_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Signed);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Signed other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Packet, other.Packet)) return false;
      if (!object.Equals(Signature, other.Signature)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (packet_ != null) hash ^= Packet.GetHashCode();
      if (signature_ != null) hash ^= Signature.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (packet_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Packet);
      }
      if (signature_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Signature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (packet_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Packet);
      }
      if (signature_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Signature);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Signed other) {
      if (other == null) {
        return;
      }
      if (other.packet_ != null) {
        if (packet_ == null) {
          packet_ = new global::CashShuffle.Messages.Packet();
        }
        Packet.MergeFrom(other.Packet);
      }
      if (other.signature_ != null) {
        if (signature_ == null) {
          signature_ = new global::CashShuffle.Messages.Signature();
        }
        Signature.MergeFrom(other.Signature);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (packet_ == null) {
              packet_ = new global::CashShuffle.Messages.Packet();
            }
            input.ReadMessage(packet_);
            break;
          }
          case 18: {
            if (signature_ == null) {
              signature_ = new global::CashShuffle.Messages.Signature();
            }
            input.ReadMessage(signature_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Packet : pb::IMessage<Packet> {
    private static readonly pb::MessageParser<Packet> _parser = new pb::MessageParser<Packet>(() => new Packet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Packet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CashShuffle.Messages.MessagesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Packet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Packet(Packet other) : this() {
      session_ = other.session_;
      number_ = other.number_;
      FromKey = other.fromKey_ != null ? other.FromKey.Clone() : null;
      ToKey = other.toKey_ != null ? other.ToKey.Clone() : null;
      phase_ = other.phase_;
      Message = other.message_ != null ? other.Message.Clone() : null;
      Registration = other.registration_ != null ? other.Registration.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Packet Clone() {
      return new Packet(this);
    }

    /// <summary>Field number for the "session" field.</summary>
    public const int SessionFieldNumber = 1;
    private pb::ByteString session_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Session {
      get { return session_; }
      set {
        session_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "number" field.</summary>
    public const int NumberFieldNumber = 2;
    private uint number_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Number {
      get { return number_; }
      set {
        number_ = value;
      }
    }

    /// <summary>Field number for the "from_key" field.</summary>
    public const int FromKeyFieldNumber = 3;
    private global::CashShuffle.Messages.VerificationKey fromKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CashShuffle.Messages.VerificationKey FromKey {
      get { return fromKey_; }
      set {
        fromKey_ = value;
      }
    }

    /// <summary>Field number for the "to_key" field.</summary>
    public const int ToKeyFieldNumber = 4;
    private global::CashShuffle.Messages.VerificationKey toKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CashShuffle.Messages.VerificationKey ToKey {
      get { return toKey_; }
      set {
        toKey_ = value;
      }
    }

    /// <summary>Field number for the "phase" field.</summary>
    public const int PhaseFieldNumber = 5;
    private global::CashShuffle.Messages.Phase phase_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CashShuffle.Messages.Phase Phase {
      get { return phase_; }
      set {
        phase_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 6;
    private global::CashShuffle.Messages.Message message_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CashShuffle.Messages.Message Message {
      get { return message_; }
      set {
        message_ = value;
      }
    }

    /// <summary>Field number for the "registration" field.</summary>
    public const int RegistrationFieldNumber = 7;
    private global::CashShuffle.Messages.Registration registration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CashShuffle.Messages.Registration Registration {
      get { return registration_; }
      set {
        registration_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Packet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Packet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Session != other.Session) return false;
      if (Number != other.Number) return false;
      if (!object.Equals(FromKey, other.FromKey)) return false;
      if (!object.Equals(ToKey, other.ToKey)) return false;
      if (Phase != other.Phase) return false;
      if (!object.Equals(Message, other.Message)) return false;
      if (!object.Equals(Registration, other.Registration)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Session.Length != 0) hash ^= Session.GetHashCode();
      if (Number != 0) hash ^= Number.GetHashCode();
      if (fromKey_ != null) hash ^= FromKey.GetHashCode();
      if (toKey_ != null) hash ^= ToKey.GetHashCode();
      if (Phase != 0) hash ^= Phase.GetHashCode();
      if (message_ != null) hash ^= Message.GetHashCode();
      if (registration_ != null) hash ^= Registration.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Session.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Session);
      }
      if (Number != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Number);
      }
      if (fromKey_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(FromKey);
      }
      if (toKey_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ToKey);
      }
      if (Phase != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Phase);
      }
      if (message_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Message);
      }
      if (registration_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Registration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Session.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Session);
      }
      if (Number != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Number);
      }
      if (fromKey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FromKey);
      }
      if (toKey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ToKey);
      }
      if (Phase != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Phase);
      }
      if (message_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Message);
      }
      if (registration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Registration);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Packet other) {
      if (other == null) {
        return;
      }
      if (other.Session.Length != 0) {
        Session = other.Session;
      }
      if (other.Number != 0) {
        Number = other.Number;
      }
      if (other.fromKey_ != null) {
        if (fromKey_ == null) {
          fromKey_ = new global::CashShuffle.Messages.VerificationKey();
        }
        FromKey.MergeFrom(other.FromKey);
      }
      if (other.toKey_ != null) {
        if (toKey_ == null) {
          toKey_ = new global::CashShuffle.Messages.VerificationKey();
        }
        ToKey.MergeFrom(other.ToKey);
      }
      if (other.Phase != 0) {
        Phase = other.Phase;
      }
      if (other.message_ != null) {
        if (message_ == null) {
          message_ = new global::CashShuffle.Messages.Message();
        }
        Message.MergeFrom(other.Message);
      }
      if (other.registration_ != null) {
        if (registration_ == null) {
          registration_ = new global::CashShuffle.Messages.Registration();
        }
        Registration.MergeFrom(other.Registration);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Session = input.ReadBytes();
            break;
          }
          case 16: {
            Number = input.ReadUInt32();
            break;
          }
          case 26: {
            if (fromKey_ == null) {
              fromKey_ = new global::CashShuffle.Messages.VerificationKey();
            }
            input.ReadMessage(fromKey_);
            break;
          }
          case 34: {
            if (toKey_ == null) {
              toKey_ = new global::CashShuffle.Messages.VerificationKey();
            }
            input.ReadMessage(toKey_);
            break;
          }
          case 40: {
            phase_ = (global::CashShuffle.Messages.Phase) input.ReadEnum();
            break;
          }
          case 50: {
            if (message_ == null) {
              message_ = new global::CashShuffle.Messages.Message();
            }
            input.ReadMessage(message_);
            break;
          }
          case 58: {
            if (registration_ == null) {
              registration_ = new global::CashShuffle.Messages.Registration();
            }
            input.ReadMessage(registration_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Message : pb::IMessage<Message> {
    private static readonly pb::MessageParser<Message> _parser = new pb::MessageParser<Message>(() => new Message());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Message> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CashShuffle.Messages.MessagesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message(Message other) : this() {
      Address = other.address_ != null ? other.Address.Clone() : null;
      Key = other.key_ != null ? other.Key.Clone() : null;
      Hash = other.hash_ != null ? other.Hash.Clone() : null;
      Signature = other.signature_ != null ? other.Signature.Clone() : null;
      str_ = other.str_;
      Blame = other.blame_ != null ? other.Blame.Clone() : null;
      Next = other.next_ != null ? other.Next.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message Clone() {
      return new Message(this);
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 1;
    private global::CashShuffle.Messages.Address address_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CashShuffle.Messages.Address Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 2;
    private global::CashShuffle.Messages.EncryptionKey key_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CashShuffle.Messages.EncryptionKey Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    /// <summary>Field number for the "hash" field.</summary>
    public const int HashFieldNumber = 3;
    private global::CashShuffle.Messages.Hash hash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CashShuffle.Messages.Hash Hash {
      get { return hash_; }
      set {
        hash_ = value;
      }
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 4;
    private global::CashShuffle.Messages.Signature signature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CashShuffle.Messages.Signature Signature {
      get { return signature_; }
      set {
        signature_ = value;
      }
    }

    /// <summary>Field number for the "str" field.</summary>
    public const int StrFieldNumber = 5;
    private string str_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Str {
      get { return str_; }
      set {
        str_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "blame" field.</summary>
    public const int BlameFieldNumber = 6;
    private global::CashShuffle.Messages.Blame blame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CashShuffle.Messages.Blame Blame {
      get { return blame_; }
      set {
        blame_ = value;
      }
    }

    /// <summary>Field number for the "next" field.</summary>
    public const int NextFieldNumber = 7;
    private global::CashShuffle.Messages.Message next_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CashShuffle.Messages.Message Next {
      get { return next_; }
      set {
        next_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Message);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Message other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Address, other.Address)) return false;
      if (!object.Equals(Key, other.Key)) return false;
      if (!object.Equals(Hash, other.Hash)) return false;
      if (!object.Equals(Signature, other.Signature)) return false;
      if (Str != other.Str) return false;
      if (!object.Equals(Blame, other.Blame)) return false;
      if (!object.Equals(Next, other.Next)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (address_ != null) hash ^= Address.GetHashCode();
      if (key_ != null) hash ^= Key.GetHashCode();
      if (hash_ != null) hash ^= Hash.GetHashCode();
      if (signature_ != null) hash ^= Signature.GetHashCode();
      if (Str.Length != 0) hash ^= Str.GetHashCode();
      if (blame_ != null) hash ^= Blame.GetHashCode();
      if (next_ != null) hash ^= Next.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (address_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Address);
      }
      if (key_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Key);
      }
      if (hash_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Hash);
      }
      if (signature_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Signature);
      }
      if (Str.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Str);
      }
      if (blame_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Blame);
      }
      if (next_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Next);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (address_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Address);
      }
      if (key_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Key);
      }
      if (hash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hash);
      }
      if (signature_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Signature);
      }
      if (Str.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Str);
      }
      if (blame_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Blame);
      }
      if (next_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Next);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Message other) {
      if (other == null) {
        return;
      }
      if (other.address_ != null) {
        if (address_ == null) {
          address_ = new global::CashShuffle.Messages.Address();
        }
        Address.MergeFrom(other.Address);
      }
      if (other.key_ != null) {
        if (key_ == null) {
          key_ = new global::CashShuffle.Messages.EncryptionKey();
        }
        Key.MergeFrom(other.Key);
      }
      if (other.hash_ != null) {
        if (hash_ == null) {
          hash_ = new global::CashShuffle.Messages.Hash();
        }
        Hash.MergeFrom(other.Hash);
      }
      if (other.signature_ != null) {
        if (signature_ == null) {
          signature_ = new global::CashShuffle.Messages.Signature();
        }
        Signature.MergeFrom(other.Signature);
      }
      if (other.Str.Length != 0) {
        Str = other.Str;
      }
      if (other.blame_ != null) {
        if (blame_ == null) {
          blame_ = new global::CashShuffle.Messages.Blame();
        }
        Blame.MergeFrom(other.Blame);
      }
      if (other.next_ != null) {
        if (next_ == null) {
          next_ = new global::CashShuffle.Messages.Message();
        }
        Next.MergeFrom(other.Next);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (address_ == null) {
              address_ = new global::CashShuffle.Messages.Address();
            }
            input.ReadMessage(address_);
            break;
          }
          case 18: {
            if (key_ == null) {
              key_ = new global::CashShuffle.Messages.EncryptionKey();
            }
            input.ReadMessage(key_);
            break;
          }
          case 26: {
            if (hash_ == null) {
              hash_ = new global::CashShuffle.Messages.Hash();
            }
            input.ReadMessage(hash_);
            break;
          }
          case 34: {
            if (signature_ == null) {
              signature_ = new global::CashShuffle.Messages.Signature();
            }
            input.ReadMessage(signature_);
            break;
          }
          case 42: {
            Str = input.ReadString();
            break;
          }
          case 50: {
            if (blame_ == null) {
              blame_ = new global::CashShuffle.Messages.Blame();
            }
            input.ReadMessage(blame_);
            break;
          }
          case 58: {
            if (next_ == null) {
              next_ = new global::CashShuffle.Messages.Message();
            }
            input.ReadMessage(next_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Address : pb::IMessage<Address> {
    private static readonly pb::MessageParser<Address> _parser = new pb::MessageParser<Address>(() => new Address());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Address> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CashShuffle.Messages.MessagesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Address() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Address(Address other) : this() {
      address_ = other.address_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Address Clone() {
      return new Address(this);
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int Address_FieldNumber = 1;
    private string address_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address_ {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Address);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Address other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Address_ != other.Address_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Address_.Length != 0) hash ^= Address_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Address_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Address_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Address_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Address other) {
      if (other == null) {
        return;
      }
      if (other.Address_.Length != 0) {
        Address_ = other.Address_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Address_ = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Registration : pb::IMessage<Registration> {
    private static readonly pb::MessageParser<Registration> _parser = new pb::MessageParser<Registration>(() => new Registration());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Registration> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CashShuffle.Messages.MessagesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Registration() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Registration(Registration other) : this() {
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Registration Clone() {
      return new Registration(this);
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 1;
    private ulong amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Registration);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Registration other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Amount != 0UL) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Amount != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Amount != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Registration other) {
      if (other == null) {
        return;
      }
      if (other.Amount != 0UL) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Amount = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class VerificationKey : pb::IMessage<VerificationKey> {
    private static readonly pb::MessageParser<VerificationKey> _parser = new pb::MessageParser<VerificationKey>(() => new VerificationKey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VerificationKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CashShuffle.Messages.MessagesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerificationKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerificationKey(VerificationKey other) : this() {
      key_ = other.key_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerificationKey Clone() {
      return new VerificationKey(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VerificationKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VerificationKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VerificationKey other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EncryptionKey : pb::IMessage<EncryptionKey> {
    private static readonly pb::MessageParser<EncryptionKey> _parser = new pb::MessageParser<EncryptionKey>(() => new EncryptionKey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EncryptionKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CashShuffle.Messages.MessagesReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncryptionKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncryptionKey(EncryptionKey other) : this() {
      key_ = other.key_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncryptionKey Clone() {
      return new EncryptionKey(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EncryptionKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EncryptionKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EncryptionKey other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DecryptionKey : pb::IMessage<DecryptionKey> {
    private static readonly pb::MessageParser<DecryptionKey> _parser = new pb::MessageParser<DecryptionKey>(() => new DecryptionKey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DecryptionKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CashShuffle.Messages.MessagesReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DecryptionKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DecryptionKey(DecryptionKey other) : this() {
      key_ = other.key_;
      public_ = other.public_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DecryptionKey Clone() {
      return new DecryptionKey(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "public" field.</summary>
    public const int PublicFieldNumber = 2;
    private string public_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Public {
      get { return public_; }
      set {
        public_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DecryptionKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DecryptionKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Public != other.Public) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Public.Length != 0) hash ^= Public.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Public.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Public);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (Public.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Public);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DecryptionKey other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Public.Length != 0) {
        Public = other.Public;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Public = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Hash : pb::IMessage<Hash> {
    private static readonly pb::MessageParser<Hash> _parser = new pb::MessageParser<Hash>(() => new Hash());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Hash> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CashShuffle.Messages.MessagesReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hash() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hash(Hash other) : this() {
      hash_ = other.hash_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hash Clone() {
      return new Hash(this);
    }

    /// <summary>Field number for the "hash" field.</summary>
    public const int Hash_FieldNumber = 1;
    private pb::ByteString hash_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Hash_ {
      get { return hash_; }
      set {
        hash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Hash);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Hash other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Hash_ != other.Hash_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Hash_.Length != 0) hash ^= Hash_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Hash_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Hash_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Hash_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Hash_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Hash other) {
      if (other == null) {
        return;
      }
      if (other.Hash_.Length != 0) {
        Hash_ = other.Hash_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Hash_ = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Signature : pb::IMessage<Signature> {
    private static readonly pb::MessageParser<Signature> _parser = new pb::MessageParser<Signature>(() => new Signature());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Signature> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CashShuffle.Messages.MessagesReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Signature() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Signature(Signature other) : this() {
      signature_ = other.signature_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Signature Clone() {
      return new Signature(this);
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int Signature_FieldNumber = 1;
    private pb::ByteString signature_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Signature_ {
      get { return signature_; }
      set {
        signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Signature);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Signature other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Signature_ != other.Signature_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Signature_.Length != 0) hash ^= Signature_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Signature_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Signature_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Signature_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Signature_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Signature other) {
      if (other == null) {
        return;
      }
      if (other.Signature_.Length != 0) {
        Signature_ = other.Signature_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Signature_ = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Transaction : pb::IMessage<Transaction> {
    private static readonly pb::MessageParser<Transaction> _parser = new pb::MessageParser<Transaction>(() => new Transaction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Transaction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CashShuffle.Messages.MessagesReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Transaction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Transaction(Transaction other) : this() {
      transaction_ = other.transaction_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Transaction Clone() {
      return new Transaction(this);
    }

    /// <summary>Field number for the "transaction" field.</summary>
    public const int Transaction_FieldNumber = 1;
    private pb::ByteString transaction_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Transaction_ {
      get { return transaction_; }
      set {
        transaction_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Transaction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Transaction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Transaction_ != other.Transaction_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Transaction_.Length != 0) hash ^= Transaction_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Transaction_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Transaction_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Transaction_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Transaction_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Transaction other) {
      if (other == null) {
        return;
      }
      if (other.Transaction_.Length != 0) {
        Transaction_ = other.Transaction_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Transaction_ = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Blame : pb::IMessage<Blame> {
    private static readonly pb::MessageParser<Blame> _parser = new pb::MessageParser<Blame>(() => new Blame());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Blame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CashShuffle.Messages.MessagesReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Blame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Blame(Blame other) : this() {
      reason_ = other.reason_;
      Accused = other.accused_ != null ? other.Accused.Clone() : null;
      Key = other.key_ != null ? other.Key.Clone() : null;
      Transaction = other.transaction_ != null ? other.Transaction.Clone() : null;
      Invalid = other.invalid_ != null ? other.Invalid.Clone() : null;
      Packets = other.packets_ != null ? other.Packets.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Blame Clone() {
      return new Blame(this);
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 1;
    private global::CashShuffle.Messages.Reason reason_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CashShuffle.Messages.Reason Reason {
      get { return reason_; }
      set {
        reason_ = value;
      }
    }

    /// <summary>Field number for the "accused" field.</summary>
    public const int AccusedFieldNumber = 2;
    private global::CashShuffle.Messages.VerificationKey accused_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CashShuffle.Messages.VerificationKey Accused {
      get { return accused_; }
      set {
        accused_ = value;
      }
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 3;
    private global::CashShuffle.Messages.DecryptionKey key_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CashShuffle.Messages.DecryptionKey Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    /// <summary>Field number for the "transaction" field.</summary>
    public const int TransactionFieldNumber = 4;
    private global::CashShuffle.Messages.Transaction transaction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CashShuffle.Messages.Transaction Transaction {
      get { return transaction_; }
      set {
        transaction_ = value;
      }
    }

    /// <summary>Field number for the "invalid" field.</summary>
    public const int InvalidFieldNumber = 5;
    private global::CashShuffle.Messages.Invalid invalid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CashShuffle.Messages.Invalid Invalid {
      get { return invalid_; }
      set {
        invalid_ = value;
      }
    }

    /// <summary>Field number for the "packets" field.</summary>
    public const int PacketsFieldNumber = 6;
    private global::CashShuffle.Messages.Packets packets_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CashShuffle.Messages.Packets Packets {
      get { return packets_; }
      set {
        packets_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Blame);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Blame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Reason != other.Reason) return false;
      if (!object.Equals(Accused, other.Accused)) return false;
      if (!object.Equals(Key, other.Key)) return false;
      if (!object.Equals(Transaction, other.Transaction)) return false;
      if (!object.Equals(Invalid, other.Invalid)) return false;
      if (!object.Equals(Packets, other.Packets)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Reason != 0) hash ^= Reason.GetHashCode();
      if (accused_ != null) hash ^= Accused.GetHashCode();
      if (key_ != null) hash ^= Key.GetHashCode();
      if (transaction_ != null) hash ^= Transaction.GetHashCode();
      if (invalid_ != null) hash ^= Invalid.GetHashCode();
      if (packets_ != null) hash ^= Packets.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Reason != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Reason);
      }
      if (accused_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Accused);
      }
      if (key_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Key);
      }
      if (transaction_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Transaction);
      }
      if (invalid_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Invalid);
      }
      if (packets_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Packets);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Reason != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Reason);
      }
      if (accused_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Accused);
      }
      if (key_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Key);
      }
      if (transaction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transaction);
      }
      if (invalid_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Invalid);
      }
      if (packets_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Packets);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Blame other) {
      if (other == null) {
        return;
      }
      if (other.Reason != 0) {
        Reason = other.Reason;
      }
      if (other.accused_ != null) {
        if (accused_ == null) {
          accused_ = new global::CashShuffle.Messages.VerificationKey();
        }
        Accused.MergeFrom(other.Accused);
      }
      if (other.key_ != null) {
        if (key_ == null) {
          key_ = new global::CashShuffle.Messages.DecryptionKey();
        }
        Key.MergeFrom(other.Key);
      }
      if (other.transaction_ != null) {
        if (transaction_ == null) {
          transaction_ = new global::CashShuffle.Messages.Transaction();
        }
        Transaction.MergeFrom(other.Transaction);
      }
      if (other.invalid_ != null) {
        if (invalid_ == null) {
          invalid_ = new global::CashShuffle.Messages.Invalid();
        }
        Invalid.MergeFrom(other.Invalid);
      }
      if (other.packets_ != null) {
        if (packets_ == null) {
          packets_ = new global::CashShuffle.Messages.Packets();
        }
        Packets.MergeFrom(other.Packets);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            reason_ = (global::CashShuffle.Messages.Reason) input.ReadEnum();
            break;
          }
          case 18: {
            if (accused_ == null) {
              accused_ = new global::CashShuffle.Messages.VerificationKey();
            }
            input.ReadMessage(accused_);
            break;
          }
          case 26: {
            if (key_ == null) {
              key_ = new global::CashShuffle.Messages.DecryptionKey();
            }
            input.ReadMessage(key_);
            break;
          }
          case 34: {
            if (transaction_ == null) {
              transaction_ = new global::CashShuffle.Messages.Transaction();
            }
            input.ReadMessage(transaction_);
            break;
          }
          case 42: {
            if (invalid_ == null) {
              invalid_ = new global::CashShuffle.Messages.Invalid();
            }
            input.ReadMessage(invalid_);
            break;
          }
          case 50: {
            if (packets_ == null) {
              packets_ = new global::CashShuffle.Messages.Packets();
            }
            input.ReadMessage(packets_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Invalid : pb::IMessage<Invalid> {
    private static readonly pb::MessageParser<Invalid> _parser = new pb::MessageParser<Invalid>(() => new Invalid());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Invalid> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CashShuffle.Messages.MessagesReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Invalid() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Invalid(Invalid other) : this() {
      invalid_ = other.invalid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Invalid Clone() {
      return new Invalid(this);
    }

    /// <summary>Field number for the "invalid" field.</summary>
    public const int Invalid_FieldNumber = 1;
    private pb::ByteString invalid_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Invalid_ {
      get { return invalid_; }
      set {
        invalid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Invalid);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Invalid other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Invalid_ != other.Invalid_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Invalid_.Length != 0) hash ^= Invalid_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Invalid_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Invalid_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Invalid_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Invalid_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Invalid other) {
      if (other == null) {
        return;
      }
      if (other.Invalid_.Length != 0) {
        Invalid_ = other.Invalid_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Invalid_ = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Packets : pb::IMessage<Packets> {
    private static readonly pb::MessageParser<Packets> _parser = new pb::MessageParser<Packets>(() => new Packets());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Packets> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CashShuffle.Messages.MessagesReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Packets() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Packets(Packets other) : this() {
      packet_ = other.packet_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Packets Clone() {
      return new Packets(this);
    }

    /// <summary>Field number for the "packet" field.</summary>
    public const int PacketFieldNumber = 1;
    private static readonly pb::FieldCodec<global::CashShuffle.Messages.Signed> _repeated_packet_codec
        = pb::FieldCodec.ForMessage(10, global::CashShuffle.Messages.Signed.Parser);
    private readonly pbc::RepeatedField<global::CashShuffle.Messages.Signed> packet_ = new pbc::RepeatedField<global::CashShuffle.Messages.Signed>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::CashShuffle.Messages.Signed> Packet {
      get { return packet_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Packets);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Packets other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!packet_.Equals(other.packet_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= packet_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      packet_.WriteTo(output, _repeated_packet_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += packet_.CalculateSize(_repeated_packet_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Packets other) {
      if (other == null) {
        return;
      }
      packet_.Add(other.packet_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            packet_.AddEntriesFrom(input, _repeated_packet_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
